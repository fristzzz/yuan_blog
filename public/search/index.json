[{"content":"\rSimulation Experiment I\rGenerate Data\rRun Regression\rSimulation Experiment II\rGenerate Data\rRun Regression\rSimulation Experiment III\rGenerate Data\rRun Regression\rSimulation Experiment IV\rGenerate Data\rRun Regression\rSimulation Experiment V\rGenerate Data\rRun Regression\rSimulation Experiment VI\rGenerate Data\rRun Regression\rSimulation Experiment I\rGenerate Data\rFirstly, generate the \\(X_1\\), \\(X_2\\), and \\(\\epsilon_i\\)\nlibrary(magrittr) # 管道符所用的库\rx.1 \u0026lt;- runif(100, min = 0, max = 5)\rx.2 \u0026lt;- rnorm(100, mean = 5, sd = 2) + 0.5 * x.1\repsilon \u0026lt;- rnorm(100, mean = 0, sd = 1)\ry \u0026lt;- 5 + 1 * x.1 + 0.5 * x.2 + epsilon\rThen run the model, estimate \\(\\hat{\\beta}_0\\) and \\(\\hat{\\beta}_1\\) by the\rfollowing model: \\[Y_i=\\beta_0+\\beta_1X_{1i}+\\beta_2X_{2i}+\\epsilon_i\\]\nlm.y1 \u0026lt;- lm(y ~ 1 + x.1 + x.2)\rsummary(lm.y1)\r## ## Call:\r## lm(formula = y ~ 1 + x.1 + x.2)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -3.01832 -0.48112 0.08427 0.54660 1.66419 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 4.50631 0.31407 14.35 \u0026lt;2e-16 ***\r## x.1 1.06987 0.07261 14.73 \u0026lt;2e-16 ***\r## x.2 0.53415 0.04761 11.22 \u0026lt;2e-16 ***\r## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\r## ## Residual standard error: 0.9621 on 97 degrees of freedom\r## Multiple R-squared: 0.8543,\tAdjusted R-squared: 0.8513 ## F-statistic: 284.4 on 2 and 97 DF, p-value: \u0026lt; 2.2e-16\rcoef(lm.y1)\r## (Intercept) x.1 x.2 ## 4.5063135 1.0698738 0.5341539\restimate \\(\\hat{\\alpha}_0\\) and \\(\\hat{\\alpha}_1\\) by the following model:\r\\[Y_i=\\alpha_0+\\alpha_1X_{1i}+u_i\\]\nlm.y2 \u0026lt;- lm(y ~ 1 + x.1)\rsummary(lm.y2)\r## ## Call:\r## lm(formula = y ~ 1 + x.1)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -3.2265 -1.1955 -0.0322 1.1315 2.7580 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 7.0950 0.3214 22.08 \u0026lt;2e-16 ***\r## x.1 1.3985 0.1002 13.96 \u0026lt;2e-16 ***\r## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\r## ## Residual standard error: 1.451 on 98 degrees of freedom\r## Multiple R-squared: 0.6653,\tAdjusted R-squared: 0.6619 ## F-statistic: 194.8 on 1 and 98 DF, p-value: \u0026lt; 2.2e-16\rcoef(lm.y2)\r## (Intercept) x.1 ## 7.095001 1.398476\rRun Regression\rRepeat 1000 times:\nbeta \u0026lt;- c()\ralpha \u0026lt;- c()\rfor (i in 1:1000) {\rx.1 \u0026lt;- runif(100, min = 0, max = 5)\rx.2 \u0026lt;- rnorm(100, mean = 5, sd = 2) + 0.5 * x.1\repsilon \u0026lt;- rnorm(100, mean = 0, sd = 1)\ry \u0026lt;- 5 + 1 * x.1 + 0.5 * x.2 + epsilon\rbeta \u0026lt;- lm(y ~ 1 + x.1 + x.2) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2] %\u0026gt;%\rc(beta, .)\ralpha \u0026lt;- lm(y ~ 1 + x.1) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2] %\u0026gt;%\rc(alpha, .)\r}\rprint(mean(beta))\r## [1] 0.9996362\rprint(mean(alpha))\r## [1] 1.250701\rFrom the result, we can see that \\(\\beta_1\\) is close to the true\rvalue, comparing to the real value, while \\(\\alpha_1\\) is not close to the\rtrue value.\nSimulation Experiment II\rModel: \\[Y_i=\\beta_0+\\beta_1X_{1i}+\\beta_2X_{2i}+\\epsilon_i\\]\nEstimating models:\n\\[Y_i=\\beta_0+\\beta_1X_{1i}+\\beta_2X_{2i}\\epsilon\\]\r\\[Y_i=\\alpha_0+\\alpha_1X_{1i}+u_i\\]\rGenerate Data\rThis time, we put the result of coefficient of \\(x_1\\) in a function.\ncoef_of_x1 \u0026lt;- function() {\rbeta_zero \u0026lt;- 5\rbeta_one \u0026lt;- 1\rbeta_two \u0026lt;- 0.5\rx_1 \u0026lt;- runif(100, 0, 5)\rx_2 \u0026lt;- rnorm(100, mean = 5, sd = 2)\repsilon \u0026lt;- rnorm(100, mean = 0, sd = 1)\r# Follows the model:\r# beta one hat:\ry \u0026lt;- beta_zero + beta_one * x_1 + beta_two * x_2 + epsilon\rbeta_one_hat \u0026lt;- lm(y ~ 1 + x_1 + x_2) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2]\ralpha_one_hat \u0026lt;- lm(y ~ 1 + x_1) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2]\rc(beta_one_hat, alpha_one_hat) %\u0026gt;% return()\r}\rRun Regression\rThen, repeat it and get the mean values of \\(\\hat{\\beta}_1\\) and\r\\(\\hat{\\alpha}_1\\)\nbeta_one_hat_list \u0026lt;- c()\ralpha_one_hat_list \u0026lt;- c()\rfor (i in 1:1000) {\rbeta_one_hat_list \u0026lt;- c(beta_one_hat_list, coef_of_x1()[1])\ralpha_one_hat_list \u0026lt;- c(alpha_one_hat_list, coef_of_x1()[2])\r}\r# mean value of beta one hat:\rprint(mean(beta_one_hat_list))\r## [1] 1.001365\r# mean value of alpha one hat:\rprint(mean(alpha_one_hat_list))\r## [1] 0.9997646\rFrom the result, we can see that \\(\\hat{\\beta}_1\\) and \\(\\hat{\\alpha}_1\\)\rare both close to the true value.\nSimulation Experiment III\rModel: \\[Y_1=\\beta_0+\\beta_1X_{1i}+\\epsilon_i\\]\nEstimating models:\n\\[Y_i=\\beta_0+\\beta_1X_{1i}+\\beta_2X_{2i}+\\epsilon_i\\]\r\\[Y_i=\\alpha_0+\\alpha_1X_{1i}+u_i\\]\rGenerate Data\rSame thing.\ncoef_of_x1 \u0026lt;- function() {\rbeta_zero \u0026lt;- 5\rbeta_one \u0026lt;- 1\rx_1 \u0026lt;- runif(100, 0, 5)\rx_2 \u0026lt;- rnorm(100, 5, 2)\repsilon \u0026lt;- rnorm(100) # 默认为标准正态分布\ry \u0026lt;- beta_zero + beta_one * x_1 + epsilon\rbeta_one_hat \u0026lt;- lm(y ~ 1 + x_1 + x_2) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2]\ralpha_one_hat \u0026lt;- lm(y ~ 1 + x_1) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2]\rreturn(c(beta_one_hat, alpha_one_hat))\r}\rRun Regression\rrepeat 1000 times:\nbeta_one_hat_list \u0026lt;- c()\ralpha_one_hat_list \u0026lt;- c()\rfor (i in 1:1000) {\rbeta_one_hat_list \u0026lt;- c(beta_one_hat_list, coef_of_x1()[1])\ralpha_one_hat_list \u0026lt;- c(alpha_one_hat_list, coef_of_x1()[2])\r}\r# mean value of beta one hat\rprint(mean(beta_one_hat_list))\r## [1] 0.9975254\r# mean value of alpha one hat\rprint(mean(alpha_one_hat_list))\r## [1] 1.003733\rThe result shows that both \\(\\hat{\\beta}_1\\) and \\(\\hat{\\alpha}_1\\) are\rclose to the true value.\n实际上，在第一个回归中，\\(x_2\\) 的系数显著水平不高（或者说在0.01不显著）\n## ## Call:\r## lm(formula = y ~ 1 + x_1 + x_2)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -2.53164 -0.56450 0.00336 0.58411 2.49718 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 5.24848 0.31173 16.837 \u0026lt;2e-16 ***\r## x_1 0.97502 0.06759 14.425 \u0026lt;2e-16 ***\r## x_2 -0.03363 0.04549 -0.739 0.462 ## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\r## ## Residual standard error: 0.9079 on 97 degrees of freedom\r## Multiple R-squared: 0.6905,\tAdjusted R-squared: 0.6841 ## F-statistic: 108.2 on 2 and 97 DF, p-value: \u0026lt; 2.2e-16\rSimulation Experiment IV\rModel: \\[Y_i=\\beta_0+\\beta_1X_{1i}+\\epsilon_i\\]\nEstimating models:\n\\[Y_i=\\beta_0+\\beta_1\\tilde{X}_{1i}+\\epsilon_i\\]\r\\[Y_i=\\alpha_0+\\alpha_1X_{1i}+\\epsilon_i\\]\rGenerate Data\rcoef_of_x1 \u0026lt;- function() {\rbeta_zero \u0026lt;- 5\rbeta_one \u0026lt;- 1\rx_1 \u0026lt;- runif(100, 0, 5)\rita \u0026lt;- rnorm(100, 0, 2)\repsilon \u0026lt;- rnorm(100)\rx_1_tilde \u0026lt;- x_1 + ita\ry \u0026lt;- beta_zero + beta_one * x_1 + epsilon\rbeta_one_hat \u0026lt;- lm(y ~ 1 + x_1_tilde) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2]\ralpha_one_hat \u0026lt;- lm(y ~ 1 + x_1) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2]\rreturn(c(beta_one_hat, alpha_one_hat))\r}\rRun Regression\rbeta_one_hat_list \u0026lt;- c()\ralpha_one_hat_list \u0026lt;- c()\rfor (i in 1:1000) {\rbeta_one_hat_list \u0026lt;- c(beta_one_hat_list, coef_of_x1()[1])\ralpha_one_hat_list \u0026lt;- c(alpha_one_hat_list, coef_of_x1()[2])\r}\r# mean value of beta one hat\rprint(mean(beta_one_hat_list))\r## [1] 0.3445264\r# mean value of alpha one hat\rprint(mean(alpha_one_hat_list))\r## [1] 0.9996002\rSo, \\(\\tilde{X}_{1i}\\)’s coefficient \\(\\hat{\\beta}_1\\) is close to the\rtrue value, while the coefficient of \\(X_{1i}\\), \\(\\hat{\\alpha}_1\\) is not\rclose to the true value.\nSimulation Experiment V\rModel: \\[Y_i=\\beta_0+\\beta_1X_{1i}+\\epsilon_i\\]\nEstimating models:\n\\[\\tilde{Y_i}=\\beta_0+\\beta_1X_{1i}+\\epsilon_1\\]\r\\[Y_i=\\alpha_0+\\alpha_1X_{1i}+u_i\\]\rGenerate Data\rcoef_of_x1 \u0026lt;- function() {\rbeta_zero \u0026lt;- 5\rbeta_one \u0026lt;- 1\rx_1 \u0026lt;- runif(100, 0, 5)\rita \u0026lt;- rnorm(100, 0, 2)\repsilon \u0026lt;- rnorm(100)\ry \u0026lt;- beta_zero + beta_one * x_1 + epsilon\ry_tilde \u0026lt;- y + ita\rbeta_one_hat \u0026lt;- lm(y_tilde ~ 1 + x_1) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2]\ralpha_one_hat \u0026lt;- lm(y ~ 1 + x_1) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2]\rreturn(c(beta_one_hat, alpha_one_hat))\r}\rRun Regression\rbeta_one_hat_list \u0026lt;- c()\ralpha_one_hat_list \u0026lt;- c()\rfor (i in 1:1000) {\rbeta_one_hat_list \u0026lt;- c(beta_one_hat_list, coef_of_x1()[1])\ralpha_one_hat_list \u0026lt;- c(alpha_one_hat_list, coef_of_x1()[2])\r}\r# mean value of beta one hat\rprint(mean(beta_one_hat_list))\r## [1] 0.9944924\r# mean value of alpha one hat\rprint(mean(alpha_one_hat_list))\r## [1] 1.000349\rWe can see from the result that coefficients of \\(X_{1i}\\) in both models\rare close to the true value.\nSimulation Experiment VI\rSupply curve:\n\\[Q_s=\\beta_0+\\beta_1P+\\beta_2X+\\epsilon_1\\]\nDemand curve:\n\\[Q_d=\\alpha_0+\\alpha_1P+\\alpha_2Z+\\epsilon_2\\]\nIn equilibrium:\n\\[P=\\pi_0+\\pi_1X+\\pi_2Z+u\\]\nGenerate Data\rFirstly, we simulate the variables.\nalpha_0 \u0026lt;- beta_0 \u0026lt;- 0\ralpha_1 \u0026lt;- beta_2 \u0026lt;- -1\ralpha_2 \u0026lt;- beta_1 \u0026lt;- 1\rx \u0026lt;- rnorm(100, 10, 169)\rz \u0026lt;- rnorm(100, 5, 400)\repsilon_1 \u0026lt;- rnorm(100, 0, 4)\repsilon_2 \u0026lt;- rnorm(100, 0, 100)\rpi_0 \u0026lt;- (alpha_0 - beta_0) / (beta_1 - alpha_1)\rpi_1 \u0026lt;- (-beta_2) / (beta_1 - alpha_1)\rpi_2 \u0026lt;- alpha_2 / (beta_1 - alpha_1)\ru \u0026lt;- (epsilon_2 - epsilon_1) / (beta_1 - alpha_1)\rThen, we calculate P and Q\np \u0026lt;- pi_0 + pi_1 * x + pi_2 * z + u\rq \u0026lt;- beta_0 + beta_1 * p + beta_2 * x + epsilon_1\rRun Regression\rThe regressions we try to run:\n\\[Q=a_0+a_1P+a_2Z+\\epsilon_1\\]\r\\[Q=b_0+b_1P+b_2X+\\epsilon_2\\]\r\\[Q=c_0+c_1P+c_2X+c_3Z+\\epsilon_3\\]\r## ## Call:\r## lm(formula = q ~ 1 + p + z)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -181.232 -54.685 -4.886 55.174 213.415 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) -3.25495 8.50707 -0.383 0.703 ## p -0.64957 0.07829 -8.297 6.24e-13 ***\r## z 0.78185 0.04129 18.935 \u0026lt; 2e-16 ***\r## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\r## ## Residual standard error: 83.36 on 97 degrees of freedom\r## Multiple R-squared: 0.8623,\tAdjusted R-squared: 0.8595 ## F-statistic: 303.8 on 2 and 97 DF, p-value: \u0026lt; 2.2e-16\r## ## Call:\r## lm(formula = q ~ 1 + p + x)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -11.5079 -1.7750 -0.0509 2.1640 8.6378 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 0.41784 0.38371 1.089 0.279 ## p 1.00111 0.00196 510.641 \u0026lt;2e-16 ***\r## x -0.99778 0.00211 -472.878 \u0026lt;2e-16 ***\r## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\r## ## Residual standard error: 3.761 on 97 degrees of freedom\r## Multiple R-squared: 0.9997,\tAdjusted R-squared: 0.9997 ## F-statistic: 1.729e+05 on 2 and 97 DF, p-value: \u0026lt; 2.2e-16\r## ## Call:\r## lm(formula = q ~ 1 + p + x + z)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -11.5659 -1.9775 -0.1094 2.3549 8.7502 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 0.385370 0.381107 1.011 0.314 ## p 1.014194 0.008340 121.607 \u0026lt;2e-16 ***\r## x -1.004335 0.004569 -219.836 \u0026lt;2e-16 ***\r## z -0.006509 0.004034 -1.613 0.110 ## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\r## ## Residual standard error: 3.731 on 96 degrees of freedom\r## Multiple R-squared: 0.9997,\tAdjusted R-squared: 0.9997 ## F-statistic: 1.172e+05 on 3 and 96 DF, p-value: \u0026lt; 2.2e-16\rWe can put together the steps above and formulate a function to return\rthe coefficients.\nget_coefficients \u0026lt;- function() {\ralpha_0 \u0026lt;- beta_0 \u0026lt;- 0\ralpha_1 \u0026lt;- beta_2 \u0026lt;- -1\ralpha_2 \u0026lt;- beta_1 \u0026lt;- 1\rx \u0026lt;- rnorm(100, 10, 169)\rz \u0026lt;- rnorm(100, 5, 400)\repsilon_1 \u0026lt;- rnorm(100, 0, 4)\repsilon_2 \u0026lt;- rnorm(100, 0, 100)\rpi_0 \u0026lt;- (alpha_0 - beta_0) / (beta_1 - alpha_1)\rpi_1 \u0026lt;- (-beta_2) / (beta_1 - alpha_1)\rpi_2 \u0026lt;- alpha_2 / (beta_1 - alpha_1)\ru \u0026lt;- (epsilon_2 - epsilon_1) / (beta_1 - alpha_1)\rp \u0026lt;- pi_0 + pi_1 * x + pi_2 * z + u\rq \u0026lt;- beta_0 + beta_1 * p + beta_2 * x + epsilon_1\ra_hat \u0026lt;- lm(q ~ 1 + p + z) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2]\rb_hat \u0026lt;- lm(q ~ 1 + p + x) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2]\rc_hat \u0026lt;- lm(q ~ 1 + p + x + z) %\u0026gt;%\rcoef() %\u0026gt;%\r.[2]\rreturn(c(a_hat, b_hat, c_hat))\r}\rThen, repeatly run it 1000 times, and gather the coefficient lists\na_hat_list \u0026lt;- c()\rb_hat_list \u0026lt;- c()\rc_hat_list \u0026lt;- c()\rfor (i in 1:1000) {\ra_hat_list \u0026lt;- c(a_hat_list, get_coefficients()[1])\rb_hat_list \u0026lt;- c(b_hat_list, get_coefficients()[2])\rc_hat_list \u0026lt;- c(c_hat_list, get_coefficients()[3])\r}\r# print out the result\rprint(mean(a_hat_list))\r## [1] -0.4830255\rprint(mean(b_hat_list))\r## [1] 0.9998708\rprint(mean(c_hat_list))\r## [1] 0.9967457\rFrom the regression results, we can conclude that \\(\\hat{b}\\) and\r\\(\\hat{c}\\) are unbiased to 1.\nAlso, in the third regression we can see the coefficient of Z is\rinsignificant\nHowever, \\(\\hat{a}\\) is not close to -1\n","date":"2023-03-14T00:00:00Z","permalink":"https://zzzzorange.netlify.com/p/experiment_01/","title":"Experiment_01"},{"content":"层次分析法 将要决策的问题及有关因素分解成目标、准则、方案等层次，进而进行定性和定量分析的决策方法。\n特征： 合理地将定性与定量决策结合起来，按照思维、心理的规律把决策过程层次化、数量化。 大致步骤：\n建立层次结构模型 构造出各层次中的所有判断矩阵 层次单排序及一致性检验 层次总排序及一致性检验 层次的建立 最高层： 一般是目标层 中间层， 中间环节，主要考虑指标和准则 最底层： 包含为了实现目标可供选择的各种方案 只考虑相邻两个层次间自上而下的支配作用，同一层次元素间相互独立 否则需要网络分析法\n构造判断矩阵 层次单排序及一致性检验 原理 一致性即判断的一种传递性，比如a的重要性是b的2倍，b的重要性是c的2倍，则a的重要性必须是c的4倍。否则就是判断的不一致。 所谓一致性检验是指判断矩阵允许有一定不一致的范围 总结 怎么跟运筹学这么像，看了看案例，大致步骤依然是定义变量、写出目标函数、写出约束条件、求解。\n层次分析大致是这样：\n写出偏好，并标明权重 分析每一个偏好中所有选择的占比，一般是列比较矩阵（相对重要性）。但我觉得这玩意太花哨又不实用，并不是很简练。 检验一致性，能用就用。一致可以理解为博弈论中的Preferrence Relationship. 如果出现not transitive, 则为不一致。 参考：\n层次分析法 ","date":"2023-03-09T00:00:00Z","permalink":"https://zzzzorange.netlify.com/p/%E5%88%86%E5%B1%82%E5%88%86%E6%9E%90/","title":"分层分析"},{"content":"","date":"2023-03-09T00:00:00Z","permalink":"https://zzzzorange.netlify.com/p/%E8%92%99%E7%89%B9%E5%8D%A1%E7%BD%97%E6%96%B9%E6%B3%95/","title":"蒙特卡罗方法"},{"content":"Style Avoid verb + prep (verb instead) Avoid idiomatic惯用的 language Avoid contractions Avoid run-on expression (etc, so on)(use \u0026lsquo;such as\u0026rsquo;) Avoid addressing the reader as \u0026ldquo;you\u0026rdquo; Avoid sexist words don\u0026rsquo;t intensify\n","date":"2023-03-07T16:07:35Z","permalink":"https://zzzzorange.netlify.com/p/academic-writing/","title":"academic writing"},{"content":"\r基本概念\rlibrary(ggplot2)\rlibrary(gapminder) # 数据集\rgm \u0026lt;- gapminder\rp \u0026lt;- ggplot(data = gm, mapping = aes(\rx = gdpPercap,\ry = lifeExp,\rcolor = continent,\rfill = continent\r))\rprint(\rp +\rgeom_point() +\rgeom_smooth(method = \u0026quot;loess\u0026quot;) +\rscale_x_log10(labels = scales::dollar)\r)\r## `geom_smooth()` using formula = \u0026#39;y ~ x\u0026#39;\r这个过程类似画一幅水彩画，有很多图层。\n图形部件\r一张统计图就是从数据到几何形状(geometic object, geom)所包含的图形属性(aesthetic attribute, aes)的一种映射\ndata: 数据框 data.frame\raes: 数据框中的数据变量映射到图形属性\rx\ry\rcolor\rsize\rshape\ralpha\rgeoms: 集合形状\rgeom_bar()\rgeom_density()\rgeom_freqpoly()\rgeom_histogram()\rgeom_violin()\rgeom_boxplot()\rgeom_col()\rgeom_point()\rgeom_smooth()\rgeom_tile()\rgeom_density2d()\rgeom_hex()\rgeom_count()\rgeom_text()\rgeom_sf()\rstats\rscales\rcoord\rfacet\rlayer\rtheme\rsave\r开始\r检查是否有缺失值\nlibrary(gapminder)\rlibrary(tidyverse)\rgapdata \u0026lt;- gapminder\rgapdata %\u0026gt;%\rsummarise(\racross(everything(), ~ sum(is.na(.)))\r)\r## # A tibble: 1 × 6\r## country continent year lifeExp pop gdpPercap\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 0 0 0 0 0 0\r基本绘图\r柱状图\r用于离散变量\ngapdata %\u0026gt;%\rggplot(aes(x = continent)) +\rgeom_bar()\rgapdata %\u0026gt;%\rggplot(aes(x = reorder(continent, continent, length))) +\rgeom_bar()\rgapdata %\u0026gt;%\rggplot(aes(x = reorder(continent, continent, length))) +\rgeom_bar() +\rcoord_flip()\rgapdata %\u0026gt;% count(continent)\r## # A tibble: 5 × 2\r## continent n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 Africa 624\r## 2 Americas 300\r## 3 Asia 396\r## 4 Europe 360\r## 5 Oceania 24\rgapdata %\u0026gt;%\rdistinct(continent, country) %\u0026gt;% # exclude fields with same continent \u0026amp; contry\rggplot(aes(x = continent)) +\rgeom_bar()\r直方图\r用于连续变量\ngapdata %\u0026gt;%\rggplot(aes(lifeExp)) +\rgeom_histogram()\r## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\rgapdata %\u0026gt;%\rggplot(aes(lifeExp)) +\rgeom_histogram(binwidth = 1) # geom_histograms()默认使用position=\u0026quot;stack\u0026quot;\rgapdata %\u0026gt;%\rggplot(aes(x = lifeExp, fill = continent)) +\rgeom_histogram()\r## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\r频次图\rgapdata %\u0026gt;%\rggplot(aes(x = lifeExp, color = continent)) +\rgeom_freqpoly()\r## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\r","date":"2023-03-07T00:13:11Z","permalink":"https://zzzzorange.netlify.com/p/ggplot2/","title":"ggplot2"},{"content":"入门 获取帮助 工作空间 示例：\n1 2 3 4 5 6 7 setwd(\u0026#34;C:/myprojects/project1\u0026#34;) options() options(digits=3) # 三位数字 x \u0026lt;- runif(20) # 20个均匀分布 summary(x) hist(x) # 直方图 q() 输入和输出 输入 source(\u0026quot;filename\u0026quot;)可在当前会话中执行一个脚本。\n文本输出 sink(\u0026quot;filename\u0026quot;)将输出重定向到文件中，默认覆盖。 append=TRUE可将文本追加到文件后 split=TRUE可将输出同时发送到屏幕和输出文件中\n图形输出 示例 1 2 3 4 5 6 7 source(\u0026#34;script1.R\u0026#34;) sink(\u0026#34;myoutput\u0026#34;, append=TRUE, split=TRUE) pdf(\u0026#34;mygraphs.pdf\u0026#34;) source(\u0026#34;script2.R\u0026#34;) sink() # 关闭输出到文件 dev.off() # 将输出返回到终端 source(\u0026#34;script3.R\u0026#34;) 结果重用 1 2 3 4 5 lm(mpg~wt, data=mtcars, data=mtcarts) lmfit \u0026lt;- lm(mpg~wt, data=mtcarts) # 保存结果 summary(lmfit) # 显示分析结果的统计概要 plot(lmfit) # 生成回归诊断图形 predict(lmfit, mynewdata) # 进行预测 创建数据集 数据集通常是由数据构成的一个矩形数组，行表示观测，列表示变量。\n不同的行业对于数据集的行和列叫法不同。统计学家称它们为观测（observation）和变量（variable），数据库分析师则称其为记录（record）和字段（field），数据挖掘和机器学习学科的研究者则把它们叫作示例（example）和属性（attribute）\n数据结构 向量 1 2 3 4 # 单个向量中的数据必须拥有相同的类型或模式 a \u0026lt;- c(1, 2, 3) b \u0026lt;- c(\u0026#34;one\u0026#34;, \u0026#34;two\u0026#34;, \u0026#34;three\u0026#34;) c \u0026lt;- c(TRUE, TRUE, FALSE) 标量是只含一个元素的向量， 如f \u0026lt;- 3\n1 2 3 4 5 6 7 8 \u0026gt; a \u0026lt;- c(5:20) # 创建5-20的数组 \u0026gt; a [1] 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 \u0026gt; a[1:5] # 取元素1-5， r中索引从1开始 [1] 5 6 7 8 9 \u0026gt; a[c(1, 3, 5)] # 取第1，3，5个元素 [1] 5 7 9 \u0026gt; R语言中索引从1开始，不同于一般编程语言的从0开始\n矩阵 矩阵是一个二维数组，只是每个元素都拥有相同的模式（数值型、字符型或逻辑型）\n1 2 3 4 5 6 7 y \u0026lt;- matrix(1: 20, nrow = 5, ncol = 4) cells \u0026lt;- c(1, 26, 24, 68) rnames \u0026lt;- c(\u0026#34;R1\u0026#34;, \u0026#34;R2\u0026#34;) cnames \u0026lt;- c(\u0026#34;C1\u0026#34;, \u0026#34;C2\u0026#34;) mymatrix \u0026lt;- matrix(cells, nrow = 2, ncol = 2, byrow = TRUE, # 按行填充,默认按列 dimnames = list(rnames, cnames)) 数组 数组array与矩阵类似，但是维度可以大于2\n1 myarray \u0026lt;- array(*vector, *dimensions, dimnames) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 \u0026gt; dim1 \u0026lt;- c(\u0026#34;a1\u0026#34;, \u0026#34;a2\u0026#34;) \u0026gt; dim2 \u0026lt;- c(\u0026#34;b1\u0026#34;, \u0026#34;b2\u0026#34;, \u0026#34;b3\u0026#34;) \u0026gt; dim3 \u0026lt;- c(\u0026#34;c1\u0026#34;, \u0026#34;c2\u0026#34;, \u0026#34;c3\u0026#34;, \u0026#34;c4\u0026#34;) \u0026gt; z \u0026lt;- array(1:24, c(2, 3, 4), dimnames = list(dim1, dim2, dim3)) \u0026gt; z , , c1 b1 b2 b3 a1 1 3 5 a2 2 4 6 , , c2 b1 b2 b3 a1 7 9 11 a2 8 10 12 , , c3 b1 b2 b3 a1 13 15 17 a2 14 16 18 , , c4 b1 b2 b3 a1 19 21 23 a2 20 22 24 数据框 1 mydata \u0026lt;- data.frame(col1, col2, col3, ...) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 \u0026gt; patientID \u0026lt;- c(1, 2, 3, 4) \u0026gt; age \u0026lt;- c(25, 34, 28, 53) \u0026gt; diabetes \u0026lt;- c(\u0026#34;type1\u0026#34;, \u0026#34;type2\u0026#34;, \u0026#34;type1\u0026#34;, \u0026#34;type1\u0026#34;) \u0026gt; status \u0026lt;- c(\u0026#34;poor\u0026#34;, \u0026#34;improved\u0026#34;, \u0026#34;excellent\u0026#34;, \u0026#34;poor\u0026#34;) # 每一列数据的模式必须唯一 \u0026gt; patientdata \u0026lt;- data.frame(patientID, age, diabetes, status) \u0026gt; patientdata patientID age diabetes status 1 1 25 type1 poor 2 2 34 type2 improved 3 3 28 type1 excellent 4 4 53 type1 poor # 选取特定行 \u0026gt; patientdata[1:2, ] patientID age diabetes status 1 1 25 type1 poor 2 2 34 type2 improved # 选取特定列（观测变量） \u0026gt; patientdata[, 1:2] patientID age 1 1 25 2 2 34 3 3 28 4 4 53 # 通过$选取列 \u0026gt; patientdata$age [1] 25 34 28 53 # table获取联列表 \u0026gt; table(patientdata$diabetes, patientdata$status) excellent improved poor type1 1 0 2 type2 0 1 0 attach(), detach() and with() 在每个变量名前都键入一次patientdata$可能会让人生厌，所以不妨走一些捷径。可以联合使用函数attach()和detach()或单独使用函数with()来简化代码。\n1 2 3 summary(mtcarts$mpg) plot(mtcars$mpg, mtcars$disp) plot(mtcars$mpg, mtcars$wt) 以上代码可以写成\n1 2 3 4 5 atach(mtcars) summary(mpg) plot(mpg, disp) plot(mpg, wt) detach(mtcars) 当对象名称不止一个时，这种方法有局限性，可能会与已存在变量冲突 另一种方式是使用函数with()\n1 2 3 4 5 with(mtcars, { print(summary(mpg)) plot(mpg, disp) plot(mpg, wt) }) 如果需要创建在with() 结构以外存在的对象，使用特殊赋值符\u0026laquo;-替代\u0026lt;-\n1 2 3 4 with(mtcars, { nokeepstats \u0026lt;- summary(mpg) keepstats \u0026lt;\u0026lt;- summary(mpg) }) 实例标识符 实例标识符可以通过rowname选项指定\n1 patientdata \u0026lt;- data.frame(patientID, age, diabetes, status, row.names = patientID) 将patientID指定为R中标记各类打印输出和图形中实例名称所用的变量\n因子factor 类别变量和有序类别变量在R中称为因子(factor)\n字符型变量\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \u0026gt; diabetes [1] \u0026#34;type1\u0026#34; \u0026#34;type2\u0026#34; \u0026#34;type1\u0026#34; \u0026#34;type1\u0026#34; \u0026gt; diabetes \u0026lt;- factor(diabetes) # 无序型 \u0026gt; diabetes [1] type1 type2 type1 type1 Levels: type1 type2 \u0026gt; status [1] \u0026#34;poor\u0026#34; \u0026#34;improved\u0026#34; \u0026#34;excellent\u0026#34; \u0026#34;poor\u0026#34; # 有序型 status \u0026lt;- factor(status, ordered = TRUE, level = c(\u0026#34;poor\u0026#34;, \u0026#34;improved\u0026#34;, \u0026#34;excellent\u0026#34;) \u0026gt; status [1] poor improved excellent poor Levels: poor \u0026lt; improved \u0026lt; excellent \u0026gt; 数值型变量可以用levels和labels参数来编码成因子。\n1 sex \u0026lt;- factor(sex, levels = c(1, 2), labels = c(\u0026#34;male\u0026#34;, \u0026#34;female\u0026#34;)) 列表list 列表允许你整合若干（可能无关的）对象到单个对象名下。\n1 mylist \u0026lt;- list(name1 = obj1, name2 = obj2, ...) 数据的输入 键盘输入 edit()可以打开一个临时的编辑器\n可以直接嵌入数据集：\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026gt; mydatatxt \u0026lt;- \u0026#34; + age gender weight + 25 m 166 + 30 f 115 + 18 f 120 + \u0026#34; \u0026gt; mydata \u0026lt;- read.table(header=TRUE, text=mydatatxt) \u0026gt; mydata age gender weight 1 25 m 166 2 30 f 115 3 18 f 120 从带分隔符的文本文件导入数据 1 mydataframe \u0026lt;- read.table(file, options) 默认地，read.table() 把字符变量转化为因子，这并不一定都是我们想要的情况。可以加上 stringsAsFactors=FALSE 对所有的字符变量去掉这个行为。 此外，可以用 colClasses 选项对每一列都指定一个类\n1 2 3 4 grades \u0026lt;- read.table(\u0026#34;studentgrades.csv\u0026#34;, header=TRUE, row.names=\u0026#34;StudentID\u0026#34;, sep=\u0026#34;,\u0026#34;, colClasses=c(\u0026#34;character\u0026#34;, \u0026#34;character\u0026#34;, \u0026#34;character\u0026#34;, \u0026#34;numeric\u0026#34;, \u0026#34;numeric\u0026#34;, \u0026#34;numeric\u0026#34;)) 导入excel数据 1 2 3 library(xlsx) workbook \u0026lt;- \u0026#34;c:/myworkbook.xlsx\u0026#34; mydataframe \u0026lt;- read.xlsx(workbook, 1) 其他的包：XLConnect(依赖于JAVA), openxlsx\n导入XML数据 XML包\n从网页抓取数据 网页上的文字可以使用函数 readLines() 来下载到一个R的字符向量中，然后使用如 grep() 和 gsub() 一类的函数处理它。对于结构复杂的网页，可以使用RCurl包和XML包来提取信息。 twitteR来获取Twitter数据， Rfacebook来获取Facebook数据…… CRAN Web Views 中查看全面列表\n导入SPSS数据 1 2 3 4 install.packages(\u0026#34;Hmisc\u0026#34;) library(Hmisc) # use.value.labels表示让函数将带有值标签的变量导入为R中水平对应相同的因子 mydataframe \u0026lt;- spss.get(\u0026#34;mydata.sav\u0026#34;, use.value.labels=TRUE) 导入Stata数据 1 2 library(foreign) mydataframe \u0026lt;- read.dta(\u0026#34;mydata.dta\u0026#34;) 数据集的标注 这种标注包括为变量名添加描述性的标签，以及为类型变量中的编码添加值标签\n变量标签 只能修改变量名（不好用）\n1 namesJ(patientdata)[2] \u0026lt;- \u0026#34;Age at hospitalization (in years)\u0026#34; 值标签 假设有一个名为gender的变量，其中1表示男性，2表示女性，可以使用：\n1 2 3 patientdata$gender \u0026lt;- factor(patientdata$gender, levels=c(1, 2) labels=c(\u0026#34;male\u0026#34;, \u0026#34;female\u0026#34;)) 处理数据对象的实用函数 图形初阶 简单例子 1 2 3 4 dose \u0026lt;- c(20, 30, 40, 45, 60) drugA \u0026lt;- c(16, 20, 27, 40, 60) drugB \u0026lt;- c(15, 18, 25, 31, 40) plot(dose, drugA, type=\u0026#34;b\u0026#34;) # type=\u0026#34;b\u0026#34;表示同时绘制点和线 ","date":"2023-03-04T13:40:58Z","permalink":"https://zzzzorange.netlify.com/p/r-basics/","title":"r basics"},{"content":"Action and Pure Strategy Prisoner\u0026rsquo;s Dilemma Two criminals, i=1,2 are arrested for a serous crime and detained in separate cells. During separate interrogation, If both \u0026ldquo;confess\u0026rdquo;, they will be jailed for 5 years. If bot \u0026ldquo;don\u0026rsquo;t confess\u0026rdquo;, they will be jailed for 1 year. If player 1 confesses while player 2 does not, then player 1 will be freed and player 2 will be jailed for 10 years. Vice versa Formally define the game as $$\\Gamma={I,{S_i}{i\\in N}, {\\nu_i(\\cdot)}{i\\in N}}$$ $$I={1, 2}$$ $$S_1=S_2={c,d}$$ $$u_1(c,c)=u_2(c,c)=-5$$ $$u_1(c,d)=u_2(d,c)=0$$ $$u_1(d,c)=u_2(c,d)=-10$$ $$u_1(d,d)=u_2(d,d)=-1$$\nPrisoner\u0026rsquo;s Dilemma: Payoff confess is a strictly dominant strategy of i = 1 if $u_1(c,c)\u0026gt;u_1(d,c)$ and $u_1(c,d)\u0026gt;u_1(d,d)$ ","date":"2023-03-04T01:55:32Z","permalink":"https://zzzzorange.netlify.com/p/game-theory-examples/","title":"game theory examples"},{"content":"以前没怎么用git，也就clone，push，add，commit这些，最近两个电脑同步笔记，要用不少git操作。发现以前看的全忘光了，再重新复习一下。\n分支内操作 创建仓库, 提交修改 git init 在当前目录创建仓库 git init filename 在指定目录下创建仓库\ngit add . 将修改添加到暂存区 git status 可以查看仓库状态，git会告诉你暂存区有无修改正在等待提交 git commit -m \u0026quot;some describe\u0026quot; 将暂存区的所有修改提交到分支，-m参数为日志内容，linux下用单引号，windows下用双引号\n如果git status告诉你有文件被修改过，用git diff可以查看修改内容。\n版本回退 回退 git log 可以查看提交日志(commitment log) git log --pretty=oneline 查看精简版，只有id和提交信息\n回退到上一个版本： git reset --hard HEAD^ 其中 HEAD^ 即上一个版本 上上个版本为 HEAD^^\n撤销回退 如果回退之后想要撤销回退，使用 git reflog 查看head记录 并用 git reset --hard \u0026lt;id\u0026gt; 来回到之前的版本\n撤销修改 git checkout -- \u0026lt;filename\u0026gt; 可以丢弃工作区的修改\n如果文件自修改后还没有被放到暂存区，撤销修改就回到和版本库一样的状态 如果文件已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态 总之，就是让这个文件回到最近一次 git commit 或者 git add 的状态 git reset HEAD \u0026lt;filename\u0026gt; 可以把暂存区的修改回退到工作区， HEAD表示最新的版本\n远程仓库 创建秘钥 ssh-keygen -t rsa -C \u0026quot;example@email.com\u0026quot; 默认目录：~/.ssh/ 其中 id_rsa 是私钥， id_rsa.pub 是公钥 打开github，添加ssh秘钥。复制 id_rsa.pub 内容到key中。\n添加完秘钥还不能push的，要把https:改成git:\n添加远程仓库 git remote add origin git@github.com:xxx/xxx.git 远程库的名字就是origin，这是git默认的叫法 git push -u origin master 第一次推送加上-u参数可以把本地的master和远程的master分支关联起来，在以后的push或pull的时候就可以简化命令\n删除远程库 git remote rm \u0026lt;name\u0026gt;\n分支管理 创建与合并分支 git checkout -b dev 创建分支 -b 表示创建并切换，相当于\n1 2 git branch dev git checkout dev git branch 查看当前分支\n把dev上的修改合并到master上：\n1 2 git checkout master git merge dev git merge 用于合并指定分支到当前分支。 git branch -d dev 删除分支\ngit switch xxx 也可以切换分支 git switch -c xxx 创建并切换\ngit log --graph 查看分支合并图\n合并分支时，加上 --no-ff 参数就可以用普通模式合并，合并后的历史有分支，能看出曾经做过合并，而 fast forward 合并就看不出来曾经做过合并。\n","date":"2023-03-02T18:47:21Z","permalink":"https://zzzzorange.netlify.com/p/git-notes/","title":"git notes"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://zzzzorange.netlify.com/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://zzzzorange.netlify.com/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Game Conponents A set of Actions of all the players A set of Outcomes The Association between action combinations and outcomes Preferences of each player over outcomes Complete Information A game of complete information requires that all the game components are common knowledge among all the players.\nStrategy Strategy, Pure Strategy, Pure Strategy Profile A strategy is a plan of action(to achieve a specific goal) A pure strategy $s_i\\in S_i$ is a deterministic plan of action for player i. A pure strategy profile $s = (s_1, s_2, \u0026hellip; , s_n)\\in S_1 \\times S_2 \\times \u0026hellip; \\times S_n =: S$ represents a specific combination of strategies across all the players. Normal Form Game Normal Form Game: Definition In order for a normal form game to be well-defined, we should describe\n$\\Gamma={I,{S_i}{i\\in N}, {\\nu_i(\\cdot)}{i\\in N}}$\nA set of players $I = {1, 2, \u0026hellip;, n}$ A set of pure strategy for each player ${S_i}_{i\\in I}\\space or\\space {S_1, \u0026hellip;, S_n}$ A set of payoff functions ${u_i()}$ where each function assigns value to all strategy profiles $v_i: S_1 \\times \u0026hellip; \\times S_n \\rightarrow R$ Normal Form Game: Static Game vs. Dynamic Game Do any player make decision before others?\nStatic Game: Plaer A and player B make decisions at the same time. Equivalently player A makes decision first and player B makes decision later but without observing player A\u0026rsquo;s decision(and vice versa)\nDynamic Game: Player A makes decision first and then player B observes A\u0026rsquo;s decision to make the decision.\nNormal Form Game: Prediction What assumption do we make to proceed?\nPlayers are rational to choose payoff-maximizing strategies which are consistently with some beliefs. Players are intelligent to know all the game components and 2. are common knowledge Prediction must be Self-Enforcing(That is, no one has incentives to deviate) Mixed Strategy (Def)Mixed Strategy: Let $S_i={s_{i1},\u0026hellip;,s_{im}}$ be a finite set of pure strategies for player i. $\\sigma_i:S_i\\rightarrow[0,1]\\in\\Delta S_i$ is a mixed strategy if $\\sum_{s\\in s_I}\\sigma_i(s)=1$ (That is $\\sigma_i$ is a probability mass function over $S_i$)\n(Def)Mixed Strategy Profile: $\\sigma=(\\sigma_1, \u0026hellip;\\sigma_n)$ is a mixed strategy profile if $\\sigma_i$ is a mixed strategy for each i.\nTo compute player i\u0026rsquo;s payoff, is it sufficient to know player i\u0026rsquo;s (mixed) strategy $\\sigma_i$ ? - No. Opponents\u0026rsquo; strategies $\\sigma_{-i}$ are necessary to compute the payoff.\nMixed Strategy: Payoff Player i\u0026rsquo;s payoff for mixed strategy profile $\\sigma=(\\sigma_1,\u0026hellip;,\\sigma_n)$ $$u_i(\\sigma)=\\sum_{s\\in S}(\\Pi_{j=1}^n \\sigma(s))u_i(s)=\\sum_{s\\in S}\\sigma_1(s_1)\u0026hellip;\\sigma_n(s_n)u_i(s_1,\u0026hellip;,s_n)$$ $$u_i(\\sigma)=u_i(\\sigma_i, \\sigma_{-i})=\\sum_{s_{i}\\in S_i}\\sigma_i(s_i)u_i(s_i,\\sigma_{-i})$$ $$u_i(\\sigma)=u_i(\\sigma_i, \\sigma_{-i})=\\sum_{s_{i}\\in S_i}\\sigma_i(s_i)u_i(s_i,\\sigma_{-i})$$ See examples for Prisoner\u0026rsquo;s Dilemma\nPure \u0026amp; Mixed Strategy Q: Does player\u0026rsquo;s pure strategy space $S_i$ lie inside her mixed strategy space $\\Delta S_i$ ? A: Since a pure strategy $s_{ik}\\in S_i$ is also probability distribution over the set of pure strategies, we have $S_i \\subset \\Delta S_i$.\nOur choice is degenerate distribution with probability one to $s_{ik}$ so that $\\sigma_i(s_{ik})=1$ and $\\sigma_i(s_i)=0$ for all $s_i \\not = s_{ik}$\n","date":"0001-01-01T00:00:00Z","permalink":"https://zzzzorange.netlify.com/p/2.static-complete-info-out/","title":"2.Static Complete Info Out"},{"content":"Linear Programming E2 ","date":"0001-01-01T00:00:00Z","permalink":"https://zzzzorange.netlify.com/p/operation-research-examples/","title":"Operation Research Examples"}]